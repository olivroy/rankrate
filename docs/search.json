[{"path":[]},{"path":"https://pearce790.github.io/rankrate/articles/tutorial.html","id":"exploratory-data-analysis","dir":"Articles","previous_headings":"","what":"Exploratory Data Analysis","title":"Tutorial: Toy Data Set","text":"now load ToyData1 data set, included rankrate package. data set includes 16 judges asses 3 objects rankings ratings. rankings complete rankings objects, ratings integers 0 (best) 4 (worst).","code":"data(\"ToyData1\")"},{"path":"https://pearce790.github.io/rankrate/articles/tutorial.html","id":"visualizing-rankings","dir":"Articles","previous_headings":"Exploratory Data Analysis","what":"Visualizing rankings","title":"Tutorial: Toy Data Set","text":"Let’s start displaying rankings toy data set tabular graphical form.","code":"rankings_table <- as.data.frame(ToyData1$rankings) rownames(rankings_table) <- paste0(\"Judge \",1:16) names(rankings_table) <- paste0(\"Rank \",1:3) pander(rankings_table) rankings_long <- melt(ToyData1$rankings) names(rankings_long) <- c(\"Judge\",\"Rank\",\"Proposal\") ggplot(rankings_long,aes(x=Proposal,fill=factor(Rank)))+theme_bw(base_size=6)+   geom_bar()+scale_fill_manual(values=c(\"#31A354\",\"#A1D99B\",\"#E5F5E0\"))+   labs(fill=\"Rank\",y=\"Count\")+ggtitle(\"Ranks by Proposal\")+   theme(legend.position = c(.8,.9),legend.direction = \"horizontal\",         panel.grid = element_blank())"},{"path":"https://pearce790.github.io/rankrate/articles/tutorial.html","id":"visualizing-ratings","dir":"Articles","previous_headings":"Exploratory Data Analysis","what":"Visualizing ratings","title":"Tutorial: Toy Data Set","text":"Let’s start displaying rankings toy data set tabular graphical form.","code":"ratings_table <- as.data.frame(ToyData1$ratings) rownames(ratings_table) <- paste0(\"Judge \",1:16) names(ratings_table) <- c(\"Proposal: 1\",2:3) set.alignment(\"right\") pander(ratings_table) ratings_long <- melt(ToyData1$ratings) names(ratings_long) <- c(\"Judge\",\"Proposal\",\"Rating\") ggplot(ratings_long,aes(x=factor(Proposal),y=Rating))+theme_bw(base_size=6)+   geom_boxplot(color=\"gray\")+geom_jitter(height=0,width=0.4,alpha=0.75)+   labs(x=\"Proposal\",y=\"Rating\")+ggtitle(\"Ratings by Proposal\")+   theme(panel.grid = element_blank())"},{"path":"https://pearce790.github.io/rankrate/articles/tutorial.html","id":"estimation","dir":"Articles","previous_headings":"","what":"Estimation","title":"Tutorial: Toy Data Set","text":"Now, let’s fit Mallows-Binomial model toy dataset. Given relatively small size data, use exact MLE search method, “ASTAR”.","code":"MLE_mb <- fit_mb(rankings=ToyData1$rankings,ratings=ToyData1$ratings,M=ToyData1$M,method=\"ASTAR\") data.frame(Parameter=c(\"Consensus Ranking, pi_0\",                        \"Object Quality Parameter, p\",                        \"Consensus Scale Parameter, theta\"),            MLE=c(paste0(MLE_mb$pi0,collapse=\"<\"),                  paste0(\"(\",paste0(MLE_mb$p,collapse=\",\"),\")\"),                  round(MLE_mb$theta))) #>                          Parameter                MLE #> 1          Consensus Ranking, pi_0              1<2<3 #> 2      Object Quality Parameter, p (0.125,0.125,0.75) #> 3 Consensus Scale Parameter, theta           99999998"},{"path":"https://pearce790.github.io/rankrate/articles/tutorial.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"Tutorial: Toy Data Set","text":"Furthermore, can bootstrap confidence intervals using ci_mb function. plot confidence intervals object quality parameters.","code":"CI_mb <- ci_mb(rankings=ToyData1$rankings,ratings=ToyData1$ratings,M=ToyData1$M,                interval=0.95,nsamples=200,method=\"ASTAR\") plot_p <- as.data.frame(cbind(1:3,MLE_mb$p,t(CI_mb$ci[,1:3]))) names(plot_p) <- c(\"Proposal\",\"PointEstimate\",\"Lower\",\"Upper\") ggplot(plot_p,aes(x=Proposal,y=PointEstimate,ymin=Lower,ymax=Upper))+   geom_point()+geom_errorbar()+ylim(c(0,1))+theme_bw()+   labs(x=\"Proposal\",y=\"Estimated p (95% CI)\")+   theme(panel.grid.major.x = element_blank(),         panel.grid.minor = element_blank())"},{"path":[]},{"path":"https://pearce790.github.io/rankrate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Pearce. Author, maintainer.","code":""},{"path":"https://pearce790.github.io/rankrate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pearce M (2023). rankrate: Joint Statistical Models Preference Learning Rankings Ratings. R package version 0.0.0.9000, https://pearce790.github.io/rankrate/.","code":"@Manual{,   title = {rankrate: Joint Statistical Models for Preference Learning with Rankings and Ratings},   author = {Michael Pearce},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://pearce790.github.io/rankrate/}, }"},{"path":"https://pearce790.github.io/rankrate/reference/AIBS.html","id":null,"dir":"Reference","previous_headings":"","what":"Real peer review data set from the American Institute of Biological Sciences (AIBS) — AIBS","title":"Real peer review data set from the American Institute of Biological Sciences (AIBS) — AIBS","text":"real data set includes 12 judges (reviewers) 28 objects (proposals), demonstrates ability Mallows-Binomial model combine ratings rankings purpose demarcating real grant proposals funding agency.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/AIBS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real peer review data set from the American Institute of Biological Sciences (AIBS) — AIBS","text":"","code":"AIBS"},{"path":"https://pearce790.github.io/rankrate/reference/AIBS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Real peer review data set from the American Institute of Biological Sciences (AIBS) — AIBS","text":"list three elements: (1) rankings, 12 x 18 matrix rankings one row per judge; (2) ratings, 12 x 18 matrix ratings, one row per judge one column per object; (3) M, number indicating maximum (worst) integer score.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/AIBS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Real peer review data set from the American Institute of Biological Sciences (AIBS) — AIBS","text":"Originally published : Gallo, Stephen .. \"Grant Peer Review Scoring Data Criteria Scores\" (2023). https://figshare.com/articles/dataset/Grant_Peer_Review_Scoring_Data_with_Criteria_Scores/12728087/1. Originally analyzed : Gallo, Stephen ., et al. \"new approach peer review assessments: Score, rank.\" Research Integrity Peer Review (2023).","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ASTAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the exact MLE of a Mallows-Binomial distribution using an A* algorithm — ASTAR","title":"Calculate the exact MLE of a Mallows-Binomial distribution using an A* algorithm — ASTAR","text":"function estimates exact MLE Mallows-Binomial distribution using * tree search algorithm proposed Pearce Erosheva (2022). Algorithm may slow number objects exceeds 15, often still tractable larger J consensus strong.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ASTAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the exact MLE of a Mallows-Binomial distribution using an A* algorithm — ASTAR","text":"","code":"ASTAR(rankings, ratings, M, keep_nodes = FALSE)"},{"path":"https://pearce790.github.io/rankrate/reference/ASTAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the exact MLE of a Mallows-Binomial distribution using an A* algorithm — ASTAR","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. M Numeric specifying maximum (=worst quality) integer rating. keep_nodes Boolean specifying function retain list open nodes traversed * tree search. Defaults FALSE.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ASTAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the exact MLE of a Mallows-Binomial distribution using an A* algorithm — ASTAR","text":"list elements pi0, estimated consensus ranking MLE, p, estimated object quality parameter MLE, theta, estimated scale parameter MLE, numnodes, number nodes traversed algorithm measure computational complexity. keep_nodes == TRUE, list also contains nodes, matrix open nodes remaining end search. multiple MLEs found, pi0, p, theta returned matrix elements, one row per MLE.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ASTAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the exact MLE of a Mallows-Binomial distribution using an A* algorithm — ASTAR","text":"","code":"data(\"ToyData1\") ASTAR(ToyData1$rankings,ToyData1$ratings,ToyData1$M,keep_nodes=TRUE) #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 5 #>  #> $nodes #>      [,1] [,2]   [,3] #> [1,]    2   NA 6.9158 #> [2,]    3   NA 9.4300 #> [3,]    1    3 8.6419 #>"},{"path":"https://pearce790.github.io/rankrate/reference/FV.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the MLE of a Mallows-Binomial distribution using the FV method — FV","title":"Estimate the MLE of a Mallows-Binomial distribution using the FV method — FV","text":"function estimates MLE Mallows-Binomial distribution using FV method.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/FV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the MLE of a Mallows-Binomial distribution using the FV method — FV","text":"","code":"FV(rankings, ratings, M)"},{"path":"https://pearce790.github.io/rankrate/reference/FV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the MLE of a Mallows-Binomial distribution using the FV method — FV","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. M Numeric specifying maximum (=worst quality) integer rating.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/FV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the MLE of a Mallows-Binomial distribution using the FV method — FV","text":"list elements pi0, estimated consensus ranking MLE, p, estimated object quality parameter MLE, theta, estimated scale parameter MLE, numnodes, number nodes traversed algorithm measure computational complexity. multiple MLEs found, pi0, p, theta returned matrix elements, one row per MLE.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/FV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the MLE of a Mallows-Binomial distribution using the FV method — FV","text":"","code":"data(\"ToyData1\") FV(ToyData1$rankings,ToyData1$ratings,ToyData1$M) #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 2 #>"},{"path":"https://pearce790.github.io/rankrate/reference/Greedy.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the MLE of a Mallows-Binomial distribution using the Greedy method — Greedy","title":"Estimate the MLE of a Mallows-Binomial distribution using the Greedy method — Greedy","text":"function estimates MLE Mallows-Binomial distribution using Greedy method.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/Greedy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the MLE of a Mallows-Binomial distribution using the Greedy method — Greedy","text":"","code":"Greedy(rankings, ratings, M)"},{"path":"https://pearce790.github.io/rankrate/reference/Greedy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the MLE of a Mallows-Binomial distribution using the Greedy method — Greedy","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. M Numeric specifying maximum (=worst quality) integer rating.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/Greedy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the MLE of a Mallows-Binomial distribution using the Greedy method — Greedy","text":"list elements pi0, estimated consensus ranking MLE, p, estimated object quality parameter MLE, theta, estimated scale parameter MLE, numnodes, number nodes traversed algorithm measure computational complexity. multiple MLEs found, pi0, p, theta returned matrix elements, one row per MLE.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/Greedy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the MLE of a Mallows-Binomial distribution using the Greedy method — Greedy","text":"","code":"data(\"ToyData1\") Greedy(ToyData1$rankings,ToyData1$ratings,ToyData1$M) #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 6 #>"},{"path":"https://pearce790.github.io/rankrate/reference/GreedyLocal.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the MLE of a Mallows-Binomial distribution using the ","title":"Estimate the MLE of a Mallows-Binomial distribution using the ","text":"function estimates MLE Mallows-Binomial distribution using GreedyLocal method, identical Greedy method includes automatic targeted post-hoc local search.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/GreedyLocal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the MLE of a Mallows-Binomial distribution using the ","text":"","code":"GreedyLocal(rankings, ratings, M)"},{"path":"https://pearce790.github.io/rankrate/reference/GreedyLocal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the MLE of a Mallows-Binomial distribution using the ","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. M Numeric specifying maximum (=worst quality) integer rating.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/GreedyLocal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the MLE of a Mallows-Binomial distribution using the ","text":"list elements pi0, estimated consensus ranking MLE, p, estimated object quality parameter MLE, theta, estimated scale parameter MLE, numnodes, number nodes traversed algorithm measure computational complexity. multiple MLEs found, pi0, p, theta returned matrix elements, one row per MLE.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/GreedyLocal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the MLE of a Mallows-Binomial distribution using the ","text":"","code":"data(\"ToyData1\") GreedyLocal(ToyData1$rankings,ToyData1$ratings,ToyData1$M) #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 9 #>"},{"path":"https://pearce790.github.io/rankrate/reference/ToyData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy data set of rankings and ratings demonstrating tie-breaking — ToyData1","title":"Toy data set of rankings and ratings demonstrating tie-breaking — ToyData1","text":"toy data set includes 16 judges 3 objects, demonstrates ability Mallows-Binomial model break ties ratings via rankings.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy data set of rankings and ratings demonstrating tie-breaking — ToyData1","text":"","code":"ToyData1"},{"path":"https://pearce790.github.io/rankrate/reference/ToyData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy data set of rankings and ratings demonstrating tie-breaking — ToyData1","text":"list three elements: (1) rankings, 16 x 3 matrix rankings one row per judge; (2) ratings, 16 x 3 matrix ratings, one row per judge one column per object; (3) M, number indicating maximum (worst) integer score.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Toy data set of rankings and ratings demonstrating tie-breaking — ToyData1","text":"Originally published : Gallo, Stephen ., et al. \"new approach peer review assessments: Score, rank.\" Research Integrity Peer Review (2023).","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData2.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy data set of rankings and ratings demonstrating decision-making with partial rankings — ToyData2","title":"Toy data set of rankings and ratings demonstrating decision-making with partial rankings — ToyData2","text":"toy data set includes 16 judges 8 objects, demonstrates ability Mallows-Binomial model estimate overall object orderings partial rankings.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy data set of rankings and ratings demonstrating decision-making with partial rankings — ToyData2","text":"","code":"ToyData2"},{"path":"https://pearce790.github.io/rankrate/reference/ToyData2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy data set of rankings and ratings demonstrating decision-making with partial rankings — ToyData2","text":"list three elements: (1) rankings, 16 x 8 matrix rankings one row per judge; (2) ratings, 16 x 8 matrix ratings, one row per judge one column per object; (3) M, number indicating maximum (worst) integer score.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Toy data set of rankings and ratings demonstrating decision-making with partial rankings — ToyData2","text":"Originally published : Gallo, Stephen ., et al. \"new approach peer review assessments: Score, rank.\" Research Integrity Peer Review (2023).","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData3.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy data set of rankings and ratings when judges express internally inconsistent preferences — ToyData3","title":"Toy data set of rankings and ratings when judges express internally inconsistent preferences — ToyData3","text":"toy data set includes 16 judges 3 objects, demonstrates ability Mallows-Binomial model estimate overall object orderings even judges provide sets rankings ratings internally inconsistent.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy data set of rankings and ratings when judges express internally inconsistent preferences — ToyData3","text":"","code":"ToyData3"},{"path":"https://pearce790.github.io/rankrate/reference/ToyData3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Toy data set of rankings and ratings when judges express internally inconsistent preferences — ToyData3","text":"list three elements: (1) rankings, 16 x 3 matrix rankings one row per judge; (2) ratings, 16 x 3 matrix ratings, one row per judge one column per object; (3) M, number indicating maximum (worst) integer score.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ToyData3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Toy data set of rankings and ratings when judges express internally inconsistent preferences — ToyData3","text":"Originally published : Gallo, Stephen ., et al. \"new approach peer review assessments: Score, rank.\" Research Integrity Peer Review (2023).","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ci_mb.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Confidence Intervals for Mallows-Binomial parameters. — ci_mb","title":"Bootstrap Confidence Intervals for Mallows-Binomial parameters. — ci_mb","text":"function calculates confidence intervals parameters Mallows-Binomial model using nonparametric bootstrap.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ci_mb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Confidence Intervals for Mallows-Binomial parameters. — ci_mb","text":"","code":"ci_mb(   rankings,   ratings,   M,   interval = 0.9,   nsamples = 50,   all = FALSE,   method = \"ASTAR\" )"},{"path":"https://pearce790.github.io/rankrate/reference/ci_mb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Confidence Intervals for Mallows-Binomial parameters. — ci_mb","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. M Numeric specifying maximum (=worst quality) integer rating. interval numeric entry 0 1 specifying confidence interval (e.g., .90 indicates 90% confidence interval). Defaults 0.90. nsamples numeric entry indicating desired number bootstrap samples used calculating confidence intervals. Defaults 50. boolean indicating estimated parameters bootstrap samples returned. Defaults FALSE. method character string indicating estimation method use estimating parameters. Allowable options currently \"ASTAR\", \"Greedy\", \"GreedyLocal\", \"FV\". Defaults exact search, \"ASTAR\".","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ci_mb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Confidence Intervals for Mallows-Binomial parameters. — ci_mb","text":"list elements ci, matrix confidence intervals Mallows-Binomial parameters, ci_ranks, matrix confidence intervals object ranks, bootstrap_pi0, matrix bootstrap consensus rankings (returned ==TRUE), bootstrap_ptheta, matrix bootstrap estimates (p,theta) (returned ==TRUE).","code":""},{"path":"https://pearce790.github.io/rankrate/reference/ci_mb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Confidence Intervals for Mallows-Binomial parameters. — ci_mb","text":"","code":"data(\"ToyData1\") ci_mb(ToyData1$rankings,ToyData1$ratings,ToyData1$M,method=\"ASTAR\",all=TRUE) #> $ci #>           p1       p2   p3 theta #> 5%  0.078125 0.078125 0.75 1e+08 #> 95% 0.171875 0.171875 0.75 1e+08 #>  #> $ci_ranks #>     Object1 Object2 Object3 #> 5%        1       2       3 #> 95%       1       2       3 #>  #> $bootstrap_pi0 #>       [,1] [,2] [,3] #>  [1,]    1    2    3 #>  [2,]    1    2    3 #>  [3,]    1    2    3 #>  [4,]    1    2    3 #>  [5,]    1    2    3 #>  [6,]    1    2    3 #>  [7,]    1    2    3 #>  [8,]    1    2    3 #>  [9,]    1    2    3 #> [10,]    1    2    3 #> [11,]    1    2    3 #> [12,]    1    2    3 #> [13,]    1    2    3 #> [14,]    1    2    3 #> [15,]    1    2    3 #> [16,]    1    2    3 #> [17,]    1    2    3 #> [18,]    1    2    3 #> [19,]    1    2    3 #> [20,]    1    2    3 #> [21,]    1    2    3 #> [22,]    1    2    3 #> [23,]    1    2    3 #> [24,]    1    2    3 #> [25,]    1    2    3 #> [26,]    1    2    3 #> [27,]    1    2    3 #> [28,]    1    2    3 #> [29,]    1    2    3 #> [30,]    1    2    3 #> [31,]    1    2    3 #> [32,]    1    2    3 #> [33,]    1    2    3 #> [34,]    1    2    3 #> [35,]    1    2    3 #> [36,]    1    2    3 #> [37,]    1    2    3 #> [38,]    1    2    3 #> [39,]    1    2    3 #> [40,]    1    2    3 #> [41,]    1    2    3 #> [42,]    1    2    3 #> [43,]    1    2    3 #> [44,]    1    2    3 #> [45,]    1    2    3 #> [46,]    1    2    3 #> [47,]    1    2    3 #> [48,]    1    2    3 #> [49,]    1    2    3 #> [50,]    1    2    3 #>  #> $bootstrap_ptheta #>             p1       p2   p3 theta #>  [1,] 0.187500 0.187500 0.75 1e+08 #>  [2,] 0.156250 0.156250 0.75 1e+08 #>  [3,] 0.171875 0.171875 0.75 1e+08 #>  [4,] 0.140625 0.140625 0.75 1e+08 #>  [5,] 0.078125 0.078125 0.75 1e+08 #>  [6,] 0.171875 0.171875 0.75 1e+08 #>  [7,] 0.125000 0.125000 0.75 1e+08 #>  [8,] 0.156250 0.156250 0.75 1e+08 #>  [9,] 0.093750 0.093750 0.75 1e+08 #> [10,] 0.156250 0.156250 0.75 1e+08 #> [11,] 0.109375 0.109375 0.75 1e+08 #> [12,] 0.078125 0.078125 0.75 1e+08 #> [13,] 0.109375 0.109375 0.75 1e+08 #> [14,] 0.125000 0.125000 0.75 1e+08 #> [15,] 0.140625 0.140625 0.75 1e+08 #> [16,] 0.078125 0.078125 0.75 1e+08 #> [17,] 0.171875 0.171875 0.75 1e+08 #> [18,] 0.125000 0.125000 0.75 1e+08 #> [19,] 0.125000 0.125000 0.75 1e+08 #> [20,] 0.156250 0.156250 0.75 1e+08 #> [21,] 0.078125 0.078125 0.75 1e+08 #> [22,] 0.125000 0.125000 0.75 1e+08 #> [23,] 0.140625 0.140625 0.75 1e+08 #> [24,] 0.156250 0.156250 0.75 1e+08 #> [25,] 0.093750 0.093750 0.75 1e+08 #> [26,] 0.140625 0.140625 0.75 1e+08 #> [27,] 0.109375 0.109375 0.75 1e+08 #> [28,] 0.109375 0.109375 0.75 1e+08 #> [29,] 0.093750 0.093750 0.75 1e+08 #> [30,] 0.156250 0.156250 0.75 1e+08 #> [31,] 0.140625 0.140625 0.75 1e+08 #> [32,] 0.140625 0.140625 0.75 1e+08 #> [33,] 0.156250 0.156250 0.75 1e+08 #> [34,] 0.109375 0.109375 0.75 1e+08 #> [35,] 0.125000 0.125000 0.75 1e+08 #> [36,] 0.078125 0.078125 0.75 1e+08 #> [37,] 0.109375 0.109375 0.75 1e+08 #> [38,] 0.171875 0.171875 0.75 1e+08 #> [39,] 0.125000 0.125000 0.75 1e+08 #> [40,] 0.171875 0.171875 0.75 1e+08 #> [41,] 0.125000 0.125000 0.75 1e+08 #> [42,] 0.078125 0.078125 0.75 1e+08 #> [43,] 0.093750 0.093750 0.75 1e+08 #> [44,] 0.140625 0.140625 0.75 1e+08 #> [45,] 0.125000 0.125000 0.75 1e+08 #> [46,] 0.156250 0.156250 0.75 1e+08 #> [47,] 0.140625 0.140625 0.75 1e+08 #> [48,] 0.062500 0.062500 0.75 1e+08 #> [49,] 0.062500 0.062500 0.75 1e+08 #> [50,] 0.078125 0.078125 0.75 1e+08 #>"},{"path":"https://pearce790.github.io/rankrate/reference/dmall.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the density of rankings under a Mallows distribution — dmall","title":"Calculate the density of rankings under a Mallows distribution — dmall","text":"function calculates density observation(s) Mallows distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/dmall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the density of rankings under a Mallows distribution — dmall","text":"","code":"dmall(rankings, pi0, theta, log = FALSE)"},{"path":"https://pearce790.github.io/rankrate/reference/dmall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the density of rankings under a Mallows distribution — dmall","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. pi0 vector specifying consensus (modal probability) ranking; used tie-breaking equal values p. theta numeric entry specifying Mallows scale parameter. log boolean indicating log likelihood returned.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/dmall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the density of rankings under a Mallows distribution — dmall","text":"numeric value indicating (log) likelihood rankings Mallows distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/dmall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the density of rankings under a Mallows distribution — dmall","text":"","code":"rankings1 <- matrix(c(1,2,3,3,1,2),nrow=2,byrow=TRUE) rankings2 <- matrix(c(1,2,3,4,2,3,NA,NA),nrow=2,byrow=TRUE) attr(rankings2,\"assignments\") <- matrix(c(rep(TRUE,4),FALSE,TRUE,TRUE,TRUE),nrow=2,byrow=TRUE) dmall(rankings=c(1,2,3,NA),pi0=c(1,2,3,4),theta=2) #> [1] 0.6603815 dmall(rankings=rankings1,pi0=c(1,2,3),theta=2) #> [1] 0.0106764 dmall(rankings=rankings2,pi0=c(1,2,3,4),theta=3,log=TRUE) #> [1] -0.2501293"},{"path":"https://pearce790.github.io/rankrate/reference/dmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the density of rankings and ratings under a Mallows-Binomial distribution. — dmb","title":"Calculate the density of rankings and ratings under a Mallows-Binomial distribution. — dmb","text":"function calculates density observation(s) Mallows-Binomial distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/dmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the density of rankings and ratings under a Mallows-Binomial distribution. — dmb","text":"","code":"dmb(rankings, ratings, p, theta, M, pi0 = NULL, log = FALSE)"},{"path":"https://pearce790.github.io/rankrate/reference/dmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the density of rankings and ratings under a Mallows-Binomial distribution. — dmb","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. p vector specifying underlying object qualities. values 0 1, inclusive. theta numeric entry specifying Mallows scale parameter. M Numeric specifying maximum (=worst quality) integer rating. pi0 vector specifying consensus (modal probability) ranking; used tie-breaking equal values p. log boolean indicating log likelihood returned.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/dmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the density of rankings and ratings under a Mallows-Binomial distribution. — dmb","text":"numeric value indicating (log) likelihood rankings ratings Mallows distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/dmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the density of rankings and ratings under a Mallows-Binomial distribution. — dmb","text":"","code":"data(ToyData1) dmb(rankings=ToyData1$rankings,ratings=ToyData1$ratings,p=c(.2,.5,.7),theta=1,M=ToyData1$M) #> [1] 1.481917e-32 dmb(rankings=ToyData1$rankings,ratings=ToyData1$ratings,p=c(.25,.25,.7),theta=1,M=ToyData1$M, pi0=c(1,2,3),log=TRUE) #> [1] -57.95753"},{"path":"https://pearce790.github.io/rankrate/reference/fit_mb.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the exact or approximate MLE of a Mallows-Binomial distribution using various methods — fit_mb","title":"Calculate the exact or approximate MLE of a Mallows-Binomial distribution using various methods — fit_mb","text":"function calculates exact approximate MLE Mallows-Binomial distribution using user-specified method.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/fit_mb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the exact or approximate MLE of a Mallows-Binomial distribution using various methods — fit_mb","text":"","code":"fit_mb(   rankings,   ratings,   M,   method = c(\"ASTAR\", \"Greedy\", \"GreedyLocal\", \"FV\") )"},{"path":"https://pearce790.github.io/rankrate/reference/fit_mb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the exact or approximate MLE of a Mallows-Binomial distribution using various methods — fit_mb","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. ratings matrix ratings, one row per judge one column per object. M Numeric specifying maximum (=worst quality) integer rating. method character string indicating estimation method use estimating parameters. Allowable options currently \"ASTAR\", \"Greedy\", \"GreedyLocal\", \"FV\". Defaults exact search, \"ASTAR\".","code":""},{"path":"https://pearce790.github.io/rankrate/reference/fit_mb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the exact or approximate MLE of a Mallows-Binomial distribution using various methods — fit_mb","text":"list elements pi0, estimated consensus ranking MLE, p, estimated object quality parameter MLE, theta, estimated scale parameter MLE, numnodes, number nodes traversed algorithm measure computational complexity. multiple MLEs found, pi0, p, theta returned matrix elements, one row per MLE.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/fit_mb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the exact or approximate MLE of a Mallows-Binomial distribution using various methods — fit_mb","text":"","code":"data(\"ToyData1\") fit_mb(ToyData1$rankings,ToyData1$ratings,ToyData1$M,method=\"ASTAR\") #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 5 #>  fit_mb(ToyData1$rankings,ToyData1$ratings,ToyData1$M,method=\"Greedy\") #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 6 #>  fit_mb(ToyData1$rankings,ToyData1$ratings,ToyData1$M,method=\"GreedyLocal\") #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 9 #>  fit_mb(ToyData1$rankings,ToyData1$ratings,ToyData1$M,method=\"FV\") #> $pi0 #> [1] 1 2 3 #>  #> $p #> [1] 0.125 0.125 0.750 #>  #> $theta #> [1] 1e+08 #>  #> $num_nodes #> [1] 2 #>"},{"path":"https://pearce790.github.io/rankrate/reference/getQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Q Matrix — getQ","title":"Calculate Q Matrix — getQ","text":"function calculates Q matrix given collection (partial) rankings.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/getQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Q Matrix — getQ","text":"","code":"getQ(rankings, I, J)"},{"path":"https://pearce790.github.io/rankrate/reference/getQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Q Matrix — getQ","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. numeric entry indicating total number judges providing rankings ratings. J numeric entry vector positive integers indicating total number objects.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/getQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Q Matrix — getQ","text":"matrix dimension J x J.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/getQ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Q Matrix — getQ","text":"","code":"rankings <- matrix(c(1,2,3,4,2,1,NA,NA),byrow=TRUE,nrow=2) getQ(rankings=rankings,I=2,J=4) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5    1  1.0 #> [2,]  0.5  0.0    1  1.0 #> [3,]  0.0  0.0    0  0.5 #> [4,]  0.0  0.0    0  0.0 attr(rankings,\"assignments\") <- matrix(c(rep(TRUE,7),FALSE),byrow=TRUE,nrow=2,ncol=4) getQ(rankings=rankings,I=2,J=4) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5    1  0.5 #> [2,]  0.5  0.0    1  0.5 #> [3,]  0.0  0.0    0  0.5 #> [4,]  0.0  0.0    0  0.0"},{"path":"https://pearce790.github.io/rankrate/reference/kendall.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Kendall's tau between rankings — kendall","title":"Calculate the Kendall's tau between rankings — kendall","text":"function calculates Kendall's tau distance ranking(s) central permutation, pi0","code":""},{"path":"https://pearce790.github.io/rankrate/reference/kendall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Kendall's tau between rankings — kendall","text":"","code":"kendall(rankings, pi0)"},{"path":"https://pearce790.github.io/rankrate/reference/kendall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Kendall's tau between rankings — kendall","text":"rankings matrix rankings, potentially attribute \"assignments\" signify separate reviewer assignments. One ranking per row. pi0 vector specifying consensus (modal probability) ranking.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/kendall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Kendall's tau between rankings — kendall","text":"vector Kendall's tau distance ranking rankings pi0.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/kendall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Kendall's tau between rankings — kendall","text":"","code":"ranking1 <- c(2,1,3) ranking2 <- matrix(c(2,1,3,1,2,3),byrow=TRUE,nrow=2) ranking3 <- matrix(c(1,2,3,4,2,4,NA,NA),byrow=TRUE,nrow=2) attr(ranking3,\"assignments\") <- matrix(c(TRUE,TRUE,TRUE,TRUE,   FALSE,TRUE,FALSE,TRUE),byrow=TRUE,nrow=2) kendall(ranking1,c(1,2,3)) #> [1] 1 kendall(ranking2,c(1,2,3)) #> [1] 1 0 kendall(ranking3,c(1,2,3,4)) #> [1] 0 0"},{"path":"https://pearce790.github.io/rankrate/reference/psi.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalizing constant function of a Mallows distribution, psi — psi","title":"Normalizing constant function of a Mallows distribution, psi — psi","text":"function calculates normalizing constant Mallows distribution Kendall distance","code":""},{"path":"https://pearce790.github.io/rankrate/reference/psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalizing constant function of a Mallows distribution, psi — psi","text":"","code":"psi(theta, J, R, log = FALSE)"},{"path":"https://pearce790.github.io/rankrate/reference/psi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalizing constant function of a Mallows distribution, psi — psi","text":"theta numeric entry specifying Mallows scale parameter. J numeric entry vector positive integers indicating total number objects judge access . length(J)>1, R must length single value. R numeric entry vector positive integers indicating length ranking provided judge. length(R)>1, J must length single value. log boolean indicating log(psi) returned.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/psi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalizing constant function of a Mallows distribution, psi — psi","text":"numeric value vector representing normalizing constant Mallows distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/psi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalizing constant function of a Mallows distribution, psi — psi","text":"","code":"psi(theta=1,J=10,R=8) #> [1] 36.20464 psi(theta=2,J=c(4,4,3),R=c(2,2,1),log=TRUE) #> [1] 0.2880096 0.2880096 0.1429316"},{"path":"https://pearce790.github.io/rankrate/reference/rmall.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Mallows generation. — rmall","title":"Random Mallows generation. — rmall","text":"function randomly generates rankings Mallows distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/rmall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Mallows generation. — rmall","text":"","code":"rmall(I, pi0, theta, R = NULL)"},{"path":"https://pearce790.github.io/rankrate/reference/rmall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Mallows generation. — rmall","text":"numeric entry indicating number observations drawn, .e., number judges providing rankings ratings. pi0 vector specifying consensus (modal probability) ranking; used tie-breaking equal values p. theta numeric entry specifying Mallows scale parameter. R numeric entry specifying length rankings drawn. R<=length(p), partial rankings drawn definition.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/rmall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Mallows generation. — rmall","text":"matrix rankings (orderings) one row per judge.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/rmall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Mallows generation. — rmall","text":"","code":"rmall(I=5,pi0=1:5,theta=1,R=3) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    2    1    4   NA   NA #> [2,]    2    1    3   NA   NA #> [3,]    1    3    2   NA   NA #> [4,]    1    2    4   NA   NA #> [5,]    3    4    1   NA   NA rmall(I=5,pi0=1:3,theta=.5,R=c(1,1,1,1,3)) #>      [,1] [,2] [,3] #> [1,]    1   NA   NA #> [2,]    3   NA   NA #> [3,]    2   NA   NA #> [4,]    1   NA   NA #> [5,]    2    1    3 rmall(I=5,pi0=1:3,theta=.5) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    2    3    1 #> [3,]    2    1    3 #> [4,]    1    2    3 #> [5,]    1    3    2"},{"path":"https://pearce790.github.io/rankrate/reference/rmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Mallows-Binomial generation — rmb","title":"Random Mallows-Binomial generation — rmb","text":"function randomly generates rankings ratings Mallows-Binomial distribution.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/rmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Mallows-Binomial generation — rmb","text":"","code":"rmb(I, p, theta, M, pi0 = NULL, R = NULL)"},{"path":"https://pearce790.github.io/rankrate/reference/rmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Mallows-Binomial generation — rmb","text":"numeric entry indicating number observations drawn, .e., number judges providing rankings ratings. p vector specifying underlying object qualities. values 0 1, inclusive. theta numeric entry specifying Mallows scale parameter. M numeric entry specifying maximum integer rating. pi0 vector specifying consensus (modal probability) ranking; used tie-breaking equal values p. R numeric entry specifying length rankings drawn. R<=length(p), partial rankings drawn definition.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/rmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Mallows-Binomial generation — rmb","text":"list containing elements ratings, matrix integer ratings one row per judge one column per object, rankings, matrix rankings (orderings) one row per judge, M, inputted maximum integer rating.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/rmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Mallows-Binomial generation — rmb","text":"","code":"rmb(I=5,p=c(.1,.3,.4,.7,.9),theta=1,M=10) #> $ratings #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    4    7    7    8 #> [2,]    1    1    5    4   10 #> [3,]    2    4    6    6    9 #> [4,]    3    3    2    7    9 #> [5,]    1    4    5    7    8 #>  #> $rankings #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    2    4    3    5 #> [2,]    2    3    1    4    5 #> [3,]    1    2    5    3    4 #> [4,]    2    3    4    1    5 #> [5,]    1    2    3    4    5 #>  #> $M #> [1] 10 #>  rmb(I=10,p=c(.1,.3,.3,.7,.9),pi0=c(1,3,2,4,5),theta=5,M=40,R=3) #> $ratings #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]    4   16    9   33   38 #>  [2,]    4   14   11   27   34 #>  [3,]    5    8   16   28   35 #>  [4,]    3   12   12   31   37 #>  [5,]    7   10   12   30   37 #>  [6,]    5   11   14   30   36 #>  [7,]    4    9    9   30   39 #>  [8,]    5   13    7   23   36 #>  [9,]    1   10   13   29   38 #> [10,]    4   11    8   29   35 #>  #> $rankings #>       [,1] [,2] [,3] [,4] [,5] #>  [1,]    1    3    2   NA   NA #>  [2,]    1    3    2   NA   NA #>  [3,]    1    3    2   NA   NA #>  [4,]    1    3    2   NA   NA #>  [5,]    1    3    2   NA   NA #>  [6,]    1    3    2   NA   NA #>  [7,]    1    3    2   NA   NA #>  [8,]    1    3    2   NA   NA #>  [9,]    1    3    2   NA   NA #> [10,]    1    3    2   NA   NA #>  #> $M #> [1] 40 #>"},{"path":"https://pearce790.github.io/rankrate/reference/to_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ranks into rankings (orderings) — to_rankings","title":"Convert ranks into rankings (orderings) — to_rankings","text":"function converts matrix ranks matrix rankings (.e., orderings), potentially including reviewer assignments attribute ranking matrix. Additionally, can used add assignments matrix existing matrix rankings.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/to_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ranks into rankings (orderings) — to_rankings","text":"","code":"to_rankings(ranks, assignments = NULL, rankings = NULL)"},{"path":"https://pearce790.github.io/rankrate/reference/to_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ranks into rankings (orderings) — to_rankings","text":"ranks matrix vector ranks, (,j) entry includes rank given judge proposal j. NA used indicate rank assigned proposal, may occur two reasons: (1) assignments matrix specified (,j) entry assignments TRUE, NA indicates proposal considered worse ranked proposals. (2) (,j) entry assignments FALSE, NA indicates proposal considered judge information can gleaned missing rank. assignments matrix booleans, (,j) entry TRUE judge assigned review proposal j, FALSE otherwise. assignments NULL, assume judges considered proposals. rankings matrix vector rankings. matrix, one ranking per row.","code":""},{"path":"https://pearce790.github.io/rankrate/reference/to_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ranks into rankings (orderings) — to_rankings","text":"matrix rankings, one row per ranking. assignments argument specified, rankings matrix attribute \"assignments\".","code":""},{"path":"https://pearce790.github.io/rankrate/reference/to_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ranks into rankings (orderings) — to_rankings","text":"","code":"ranks <- matrix(data=c(4,2,3,1,NA,1,2,3,NA,NA,1,NA),byrow=TRUE,nrow=3) assignments=matrix(TRUE,byrow=TRUE,nrow=3,ncol=4) to_rankings(ranks=ranks) #>      [,1] [,2] [,3] [,4] #> [1,]    4    2    3    1 #> [2,]    2    3    4   NA #> [3,]    3   NA   NA   NA to_rankings(ranks=ranks,assignments=assignments) #>      [,1] [,2] [,3] [,4] #> [1,]    4    2    3    1 #> [2,]    2    3    4   NA #> [3,]    3   NA   NA   NA #> attr(,\"assignments\") #>      [,1] [,2] [,3] [,4] #> [1,] TRUE TRUE TRUE TRUE #> [2,] TRUE TRUE TRUE TRUE #> [3,] TRUE TRUE TRUE TRUE to_rankings(assignments=matrix(TRUE,nrow=1,ncol=3),rankings=c(3,2,1)) #>      [,1] [,2] [,3] #> [1,]    3    2    1 #> attr(,\"assignments\") #>      [,1] [,2] [,3] #> [1,] TRUE TRUE TRUE"},{"path":"https://pearce790.github.io/rankrate/news/index.html","id":"version-100","dir":"Changelog","previous_headings":"","what":"version 1.0.0","title":"version 1.0.0","text":"CRAN release: 2022-06-09 First release.","code":""},{"path":"https://pearce790.github.io/rankrate/news/index.html","id":"version-110","dir":"Changelog","previous_headings":"","what":"version 1.1.0","title":"version 1.1.0","text":"Updated estimation functions remove bugs found prior version related conditional updating object quality vector, p, given ordering parameters. Estimation functions now faster allow identication multiple MLEs, present. Additionally, vignettes added demonstration purposes.","code":""}]
